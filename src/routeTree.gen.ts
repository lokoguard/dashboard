/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SenderImport } from './routes/sender'
import { Route as IndexImport } from './routes/index'
import { Route as PolicyIndexImport } from './routes/policy/index'
import { Route as SenderIdLogsRouteImport } from './routes/sender/$id/logs.route'
import { Route as SenderIdIssuesRouteImport } from './routes/sender/$id/issues.route'
import { Route as SenderIdCrashlyticsRouteImport } from './routes/sender/$id/crashlytics.route'
import { Route as SenderIdAnalyticsRouteImport } from './routes/sender/$id/analytics.route'
import { Route as PolicyIdDesignerRouteImport } from './routes/policy/$id/designer.route'

// Create/Update Routes

const SenderRoute = SenderImport.update({
  path: '/sender',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PolicyIndexRoute = PolicyIndexImport.update({
  path: '/policy/',
  getParentRoute: () => rootRoute,
} as any)

const SenderIdLogsRouteRoute = SenderIdLogsRouteImport.update({
  path: '/$id/logs',
  getParentRoute: () => SenderRoute,
} as any)

const SenderIdIssuesRouteRoute = SenderIdIssuesRouteImport.update({
  path: '/$id/issues',
  getParentRoute: () => SenderRoute,
} as any)

const SenderIdCrashlyticsRouteRoute = SenderIdCrashlyticsRouteImport.update({
  path: '/$id/crashlytics',
  getParentRoute: () => SenderRoute,
} as any)

const SenderIdAnalyticsRouteRoute = SenderIdAnalyticsRouteImport.update({
  path: '/$id/analytics',
  getParentRoute: () => SenderRoute,
} as any)

const PolicyIdDesignerRouteRoute = PolicyIdDesignerRouteImport.update({
  path: '/policy/$id/designer',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/sender': {
      preLoaderRoute: typeof SenderImport
      parentRoute: typeof rootRoute
    }
    '/policy/$id/designer': {
      preLoaderRoute: typeof PolicyIdDesignerRouteImport
      parentRoute: typeof rootRoute
    }
    '/sender/$id/analytics': {
      preLoaderRoute: typeof SenderIdAnalyticsRouteImport
      parentRoute: typeof SenderImport
    }
    '/sender/$id/crashlytics': {
      preLoaderRoute: typeof SenderIdCrashlyticsRouteImport
      parentRoute: typeof SenderImport
    }
    '/sender/$id/issues': {
      preLoaderRoute: typeof SenderIdIssuesRouteImport
      parentRoute: typeof SenderImport
    }
    '/sender/$id/logs': {
      preLoaderRoute: typeof SenderIdLogsRouteImport
      parentRoute: typeof SenderImport
    }
    '/policy/': {
      preLoaderRoute: typeof PolicyIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  SenderRoute.addChildren([
    SenderIdAnalyticsRouteRoute,
    SenderIdCrashlyticsRouteRoute,
    SenderIdIssuesRouteRoute,
    SenderIdLogsRouteRoute,
  ]),
  PolicyIdDesignerRouteRoute,
  PolicyIndexRoute,
])

/* prettier-ignore-end */
